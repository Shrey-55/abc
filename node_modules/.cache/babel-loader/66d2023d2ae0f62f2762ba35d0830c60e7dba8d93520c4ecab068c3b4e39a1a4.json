{"ast":null,"code":"var _jsxFileName = \"/home/shrey/Documents/DBIS/lab4/IITASC/abc/src/App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n// import client from \"./db.js\";\n// import \"./db.js\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Client\n} = require('pg');\nconst client = new Client({\n  host: 'localhost',\n  port: 5432,\n  user: 'shrey',\n  password: 'abc',\n  database: 'lab2db'\n});\n\n// client = require(\"./db.js\");\nclient.connect().then(() => console.log('Connected to PostgreSQL')).catch(err => console.error('Connection error', err.stack));\nclient.query('SELECT * FROM teaches', (err, res) => {\n  if (!err) {\n    console.log(res.rows);\n  } else {\n    console.log(err.message);\n  }\n});\nfunction App() {\n  _s();\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    client.connect().then(() => console.log('Connected to PostgreSQL'))\n    // .catch(err => console.error('Connection error', err.stack));\n    .then(() => client.query('SELECT * FROM teaches')).then((err, res) => {\n      if (!err) {\n        data = res.json();\n        setData(data.message);\n      } else {\n        console.log(err.message);\n      }\n    });\n    fetch(\"/api\").then(res => res.json()).then(data => setData(data.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: !data ? \"Loading...\" : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","Client","require","client","host","port","user","password","database","connect","then","console","log","catch","err","error","stack","query","res","rows","message","App","data","setData","useState","useEffect","json","fetch"],"sources":["/home/shrey/Documents/DBIS/lab4/IITASC/abc/src/App.js"],"sourcesContent":["// client/src/App.js\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n// import client from \"./db.js\";\n// import \"./db.js\"\n\nconst { Client } = require('pg');\n\nconst client = new Client({\n  host: 'localhost',\n  port: 5432,\n  user: 'shrey',\n  password: 'abc',\n  database: 'lab2db'\n});\n\n// client = require(\"./db.js\");\nclient.connect()\n  .then(() => console.log('Connected to PostgreSQL'))\n  .catch(err => console.error('Connection error', err.stack));\n\nclient.query('SELECT * FROM teaches', (err, res) => {\n    if(!err)\n    {\n        console.log(res.rows);\n    }\n    else\n    {\n        console.log(err.message);\n    }\n});\n\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n\n  React.useEffect(() => {\n    client.connect()\n  .then(() => console.log('Connected to PostgreSQL'))\n  // .catch(err => console.error('Connection error', err.stack));\n    .then(()=>client.query('SELECT * FROM teaches')).\n    then( (err, res) => {\n      if(!err)\n      {\n          data = res.json();\n          setData(data.message);\n      }\n      else\n      {\n          console.log(err.message);\n      }\n    });\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => setData(data.message));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>{!data ? \"Loading...\" : data}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB;AACA;AAAA;AAEA,MAAM;EAAEC;AAAO,CAAC,GAAGC,OAAO,CAAC,IAAI,CAAC;AAEhC,MAAMC,MAAM,GAAG,IAAIF,MAAM,CAAC;EACxBG,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAE;AACZ,CAAC,CAAC;;AAEF;AACAL,MAAM,CAACM,OAAO,EAAE,CACbC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CAAC,CAClDC,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAED,GAAG,CAACE,KAAK,CAAC,CAAC;AAE7Db,MAAM,CAACc,KAAK,CAAC,uBAAuB,EAAE,CAACH,GAAG,EAAEI,GAAG,KAAK;EAChD,IAAG,CAACJ,GAAG,EACP;IACIH,OAAO,CAACC,GAAG,CAACM,GAAG,CAACC,IAAI,CAAC;EACzB,CAAC,MAED;IACIR,OAAO,CAACC,GAAG,CAACE,GAAG,CAACM,OAAO,CAAC;EAC5B;AACJ,CAAC,CAAC;AAGF,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,KAAK,CAACyB,QAAQ,CAAC,IAAI,CAAC;EAE5CzB,KAAK,CAAC0B,SAAS,CAAC,MAAM;IACpBtB,MAAM,CAACM,OAAO,EAAE,CACjBC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAClD;IAAA,CACGF,IAAI,CAAC,MAAIP,MAAM,CAACc,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAChDP,IAAI,CAAE,CAACI,GAAG,EAAEI,GAAG,KAAK;MAClB,IAAG,CAACJ,GAAG,EACP;QACIQ,IAAI,GAAGJ,GAAG,CAACQ,IAAI,EAAE;QACjBH,OAAO,CAACD,IAAI,CAACF,OAAO,CAAC;MACzB,CAAC,MAED;QACIT,OAAO,CAACC,GAAG,CAACE,GAAG,CAACM,OAAO,CAAC;MAC5B;IACF,CAAC,CAAC;IACFO,KAAK,CAAC,MAAM,CAAC,CACVjB,IAAI,CAAEQ,GAAG,IAAKA,GAAG,CAACQ,IAAI,EAAE,CAAC,CACzBhB,IAAI,CAAEY,IAAI,IAAKC,OAAO,CAACD,IAAI,CAACF,OAAO,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,wBAC5B;QAAK,GAAG,EAAEpB,IAAK;QAAC,SAAS,EAAC,UAAU;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAClD;QAAA,UAAI,CAACsB,IAAI,GAAG,YAAY,GAAGA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA;EAC7B;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAhCQD,GAAG;AAAA,KAAHA,GAAG;AAkCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}